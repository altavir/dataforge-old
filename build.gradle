buildscript {
    ext.kotlin_version = "1.2.70"
    repositories {
        jcenter()
        maven {
            url = "https://dl.bintray.com/kotlin/kotlin-eap"
        }
    }

    dependencies {
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:0.9.16"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }


}

plugins {
    //id "org.jetbrains.kotlin.jvm" version "1.2.31" apply false
    id "me.champeau.gradle.jmh" version "0.4.7" apply false
}


apply plugin: 'idea'
//apply plugin: "com.jfrog.artifactory"
apply plugin: 'maven-publish'

allprojects {
    apply plugin: 'org.jetbrains.dokka'
    apply plugin: 'me.champeau.gradle.jmh'

    group = 'hep.dataforge'
    version = '0.4.0 - SNAPSHOT'

    repositories {
        mavenCentral()
        jcenter()
        //maven { url = "https://jitpack.io" }
        maven { url = "http://dl.bintray.com/kotlin/ktor" }
        maven { url = "https://dl.bintray.com/kotlin/kotlinx" }
    }
}

subprojects {
    if (it.name != "site") {
        //apply plugin: "com.jfrog.artifactory"
        apply plugin: 'maven-publish'
        apply plugin: 'java'
        apply plugin: "kotlin"

        [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

        sourceCompatibility = 1.8
        targetCompatibility = 1.8

        dependencies {
            compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
            compile group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: kotlin_version
            testCompile 'org.codehaus.groovy:groovy-all:2.5.+'
            testCompile group: 'junit', name: 'junit', version: '4.+'
            testCompile "org.spockframework:spock-core:1.0-groovy-2.+"
        }



        publishing {
            repositories {
                maven {
                    if (project.hasProperty('npm_user')) {
                        // change to point to your repo, e.g. http://my.org/repo
                        url = "sftp://npm.mipt.ru:22/var/www/maven"
                        credentials {
                            username npm_user
                            password npm_pass
                        }
                    } else {
                        url "file:" + projectDir.path + "/build/maven"
                    }
                }
            }
            publications {
                miptNPM(MavenPublication) {
                    from components.java
                }
            }
        }



        compileKotlin {
            kotlinOptions {
                freeCompilerArgs = ['-Xjvm-default=enable']
                jvmTarget = "1.8"
                javaParameters = true
            }
        }

        compileTestKotlin {
            kotlinOptions {
                freeCompilerArgs = ['-Xjvm-default=enable']
                jvmTarget = "1.8"
                javaParameters = true
            }
        }

        kotlin {
            experimental {
                coroutines "enable"
            }
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.9'
}

/*
if(file('properties.gradle').exists()) {
    artifactory {
        contextUrl = "http://npm.mipt.ru:8081/artifactory"
        //The base Artifactory URL if not overridden by the publisher/resolver
        publish {
            repository {
                repoKey = 'gradle-dev-local'
                username = "${artifactory.user}"
                password = "${artifactory.pass}"
                maven = true

            }
            defaults {
                publications('mavenJava')
            }
        }
        resolve {
            repository {
                repoKey = 'gradle-dev'
                username = "${artifactory.user}"
                password = "${artifactory.pass}"
                maven = true

            }
        }
    }
}
*/
